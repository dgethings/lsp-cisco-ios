package ios

import protocol "github.com/tliron/glsp/protocol_3_16"

type Keyword struct {
	Keyword       string
	Documentation string
	Insert        string
}

func NewKeyword(k string, d string, i string) Keyword {
	return Keyword{Keyword: k, Documentation: d, Insert: i}
}

func (k *Keyword) Completion() protocol.CompletionItem {
	kind := protocol.CompletionItemKindKeyword
	format := protocol.InsertTextFormatSnippet
	c := protocol.CompletionItem{
		Label: k.Keyword,
		Documentation: protocol.MarkupContent{
			Kind:  protocol.MarkupKindMarkdown,
			Value: k.Documentation,
		},
	}
	c.InsertText = &k.Insert
	c.Kind = &kind
	c.InsertTextFormat = &format
	return c
}

func Keywords() map[string]Keyword {
	k := make(map[string]Keyword)
  k["activation-character"] = NewKeyword("activation-character", "", "activation-character ascii-number no activation-character")
  k["alias"] = NewKeyword("alias", "", "alias mode command-alias original-command no alias mode [command-alias]")
  k["archive"] = NewKeyword("archive", "", "archive")
  k["archive config"] = NewKeyword("archive config", "", "archive config")
  k["archive log config persistent save"] = NewKeyword("archive log config persistent save", "", "archive log config persistent save")
  k["archive tar"] = NewKeyword("archive tar", "", "archive tar {/create destination-urlflash:/ file-url | /table source-url | /xtract source-urlflash:/file-url [dir/file...]}")
  k["async-bootp"] = NewKeyword("async-bootp", "", "async-bootp tag [:hostname] data no async-bootp")
  k["attach"] = NewKeyword("attach", "", "Cisco 12000 Series attach slot-number Cisco 7600 Series and Catalyst 6500 Series attach module-number")
  k["autobaud"] = NewKeyword("autobaud", "", "autobaud no autobaud")
  k["auto-sync"] = NewKeyword("auto-sync", "", "auto-sync {startup-config | config-register | bootvar | running-config | standard} no auto-sync {startup-config | config-register | bootvar | standard}")
  k["autoupgrade disk-cleanup"] = NewKeyword("autoupgrade disk-cleanup", "", "autoupgrade disk-cleanup [crashinfo | core | image | irrecoverable] no autoupgrade disk-cleanup [crashinfo | core | image | irrecoverable]")
  k["autoupgrade ida url"] = NewKeyword("autoupgrade ida url", "", "autoupgrade ida url url no autoupgrade ida url url")
  k["autoupgrade status email"] = NewKeyword("autoupgrade status email", "", "autoupgrade status email [recipient [email-address] ] [smtp-server [smtp-server] ] no autoupgrade status email [recipient [email-address] ] [smtp-server [smtp-server] ]")
  k["banner exec"] = NewKeyword("banner exec", "", "banner exec d message d no banner exec")
  k["banner incoming"] = NewKeyword("banner incoming", "", "banner incoming d message d no banner incoming")
  k["banner login"] = NewKeyword("banner login", "", "banner login d message d no banner login")
  k["banner motd"] = NewKeyword("banner motd", "", "banner motd d message d no banner motd")
  k["banner slip-ppp"] = NewKeyword("banner slip-ppp", "", "banner slip-ppp d message d no banner slip-ppp")
  k["boot"] = NewKeyword("boot", "", "boot boot file-url boot filename [tftp-ip-address] boot flash [flash-fs: ] [partition-number: ] [filename] Cisco 7000 Series, 7200 Series, 7500 Series Routers boot flash-fs: [filename] Cisco 1600 and Cisco 3600 Series Routers boot [flash-fs: ] [partition-number: ] [filename] Cisco 1800 Series, 2800 Series, and 3800 Series Routers boot usbflash0 [: filename]")
  k["boot bootldr"] = NewKeyword("boot bootldr", "", "boot bootldr file-url boot bootldr command no boot bootldr")
  k["boot bootstrap"] = NewKeyword("boot bootstrap", "", "boot bootstrap file-url no boot bootstrap file-url boot bootstrap flash [filename] no boot bootstrap flash [filename] boot bootstrap [tftp] filename [ip-address] no boot bootstrap [tftp] filename [ip-address] boot bootstrap mop filename [interface-type interface-number] no boot bootstrap mop filename [interface-type interface-number]")
  k["boot config"] = NewKeyword("boot config", "", "Platforms Other than Cisco 7600 Series Router boot config file-system-prefix: [directory/] filename [nvbypass] no boot config Cisco 7600 Series Router boot config device:filename [nvbypass] no boot config")
  k["boot host"] = NewKeyword("boot host", "", "boot host commandboot host remote-url no boot host remote-url")
  k["boot network"] = NewKeyword("boot network", "", "boot network remote-url no boot network remote-url")
  k["boot system"] = NewKeyword("boot system", "", "Loading System Image from a URL or a TFTP File boot system {file-url | filename} no boot system {file-url | filename} Booting from a System Image in Internal Flash boot system flash [flash-fs:] [partition-number:] [filename] no boot system flash [flash-fs:] [partition-number:] [filename] Booting from a MOP Server boot system mop filename [mac-address] [interface] no boot system mop filename [mac-address] [interface] Booting from ROM boot system rom no boot system rom Booting a System Image from a Network, TFTP, or FTP Server boot system {rcp | tftp | ftp} filename [ip-address] no boot system {rcp | tftp | ftp} filename [ip-address]")
  k["boot-end-marker"] = NewKeyword("boot-end-marker", "", "")
  k["boot-start-marker"] = NewKeyword("boot-start-marker", "", "")
  k["cd"] = NewKeyword("cd", "", "cd [filesystem:] [directory]")
  k["clear archive log config"] = NewKeyword("clear archive log config", "", "clear archive log config [force | persistent]")
  k["clear catalyst6000 traffic-meter"] = NewKeyword("clear catalyst6000 traffic-meter", "", "clear catalyst6000 traffic-meter")
  k["clear configuration lock"] = NewKeyword("clear configuration lock", "", "clear configuration lock")
  k["clear diagnostic event-log"] = NewKeyword("clear diagnostic event-log", "", "clear diagnostic event-log {event-type {error | info | warning} | module {num | slot subslot | all}}")
  k["clear ip http client cache"] = NewKeyword("clear ip http client cache", "", "clear ip http client cache {all | session session-name | url complete-url}")
  k["clear logging"] = NewKeyword("clear logging", "", "clear logging [persistent [url filesystem:/directory]]")
  k["clear logging system"] = NewKeyword("clear logging system", "", "clear logging system [disk name]")
  k["clear logging xml"] = NewKeyword("clear logging xml", "", "clear logging xml")
  k["clear memory low-water-mark"] = NewKeyword("clear memory low-water-mark", "", "clear memory low-water-mark")
  k["clear mls statistics"] = NewKeyword("clear mls statistics", "", "clear mls statistics [module num]")
  k["clear parser cache"] = NewKeyword("clear parser cache", "", "clear parser cache")
  k["clear parser statistics"] = NewKeyword("clear parser statistics", "", "clear parser statistics")
  k["clear platform netint"] = NewKeyword("clear platform netint", "", "clear platform netint")
  k["clear processes interrupt mask"] = NewKeyword("clear processes interrupt mask", "", "clear processes interrupt mask detail")
  k["clear scp accounting"] = NewKeyword("clear scp accounting", "", "clear scp accounting")
  k["clear tcp"] = NewKeyword("clear tcp", "", "clear tcp {line line-number | local hostname port remote hostname port | tcb address}")
  k["clear vlan counters"] = NewKeyword("clear vlan counters", "", "clear vlan [vlan-id] counters")
  k["clock"] = NewKeyword("clock", "", "clock {auto | active [prefer] | passive [prefer]} no clock")
  k["clock initialize nvram"] = NewKeyword("clock initialize nvram", "", "clock initialize nvram no clock initialize nvram")
  k["config-register"] = NewKeyword("config-register", "", "config-register value")
  k["configure check syntax"] = NewKeyword("configure check syntax", "", "configure check syntax [source-location]")
  k["configuration mode exclusive"] = NewKeyword("configuration mode exclusive", "", "configuration mode exclusive {auto | manual} [expire seconds] [lock-show] [interleave] [terminate] [config-wait seconds] [retry-wait seconds] no configuration mode exclusive")
  k["configure confirm"] = NewKeyword("configure confirm", "", "configure confirm")
  k["configure memory"] = NewKeyword("configure memory", "", "configure memory")
  k["configure network"] = NewKeyword("configure network", "", "")
  k["configure overwrite-network"] = NewKeyword("configure overwrite-network", "", "")
  k["configure replace"] = NewKeyword("configure replace", "", "configure replace target-url [nolock] list force ignorecase [revert trigger [error] [timer minutes] | time minutes]")
  k["configure revert"] = NewKeyword("configure revert", "", "configure revert {now | timer {minutes | idle minutes}}")
  k["configure terminal"] = NewKeyword("configure terminal", "", "configure terminal Cisco IOS Releases 12.3(14)T and Subsequent Releases: configure terminal [lock] Cisco IOS Releases 12.2(33)SRC and Subsequent Releases: configure terminal [revert {timer minutes | idle minutes}]")
  k["confreg"] = NewKeyword("confreg", "", "confreg [value]")
  k["continue (ROM monitor)"] = NewKeyword("continue (ROM monitor)", "", "continue")
  k["copy"] = NewKeyword("copy", "", "copy [/erase] [/ verify | /noverify] source-url destination-url")
  k["copy erase flash"] = NewKeyword("copy erase flash", "", "")
  k["copy http"] = NewKeyword("copy http", "", "")
  k["copy https"] = NewKeyword("copy https", "", "")
  k["copy logging system"] = NewKeyword("copy logging system", "", "copy logging system target: filename no copy logging system")
  k["copy xmodem"] = NewKeyword("copy xmodem", "", "copy xmodem: flashfilesystem:")
  k["copy ymodem"] = NewKeyword("copy ymodem", "", "copy ymodem: flashfilesystem:")
  k["copy noverify"] = NewKeyword("copy noverify", "", "copy /noverify source-url destination-url")
  k["databits"] = NewKeyword("databits", "", "databits {5 | 6 | 7 | 8} no databits")
  k["data-character-bits"] = NewKeyword("data-character-bits", "", "data-character-bits {7 | 8} no data-character-bits")
  k["default-value data-character-bits"] = NewKeyword("default-value data-character-bits", "", "default-value data-character-bits {7 | 8} no default-value data-character-bits")
  k["default-value exec-character-bits"] = NewKeyword("default-value exec-character-bits", "", "default-value exec-character-bits {7 | 8} no default-value exec-character-bits")
  k["default-value modem-interval"] = NewKeyword("default-value modem-interval", "", "default-value modem-interval milliseconds no default-value modem-interval")
  k["default-value special-character-bits"] = NewKeyword("default-value special-character-bits", "", "default-value special-character-bits commanddefault-value special-character-bits {7 | 8} no default-value special-character-bits")
  k["define interface-range"] = NewKeyword("define interface-range", "", "define interface-range macro-name interface-range")
  k["delete"] = NewKeyword("delete", "", "delete url [/force | /recursive]")
  k["diag"] = NewKeyword("diag", "", "diag command diag slot-number [halt | previous | post | verbose [wait] | wait] no diag slot-number")
  k["diagnostic bootup level"] = NewKeyword("diagnostic bootup level", "", "diagnostic bootup level {minimal | complete} no diagnostic bootup level")
  k["diagnostic cns"] = NewKeyword("diagnostic cns", "", "diagnostic cns {publish | subscribe} [subject] no diagnostic cns {publish | subscribe} [subject]")
  k["diagnostic event-log size"] = NewKeyword("diagnostic event-log size", "", "diagnostic event-log size size no diagnostic event-log size")
  k["diagnostic level"] = NewKeyword("diagnostic level", "", "diagnostic level {power-on | bypass}")
  k["diagnostic monitor"] = NewKeyword("diagnostic monitor", "", "diagnostic monitor intervalmodule number test {test-id | test-id-range | all} hh:mm:ss milliseconds days diagnostic monitor syslog diagnostic monitor module num test {test-id | test-id-range | all} no diagnostic monitor {interval | syslog} Cisco UBR10012 Router diagnostic monitor {bay slot/ bay | slot slot number | subslot slot/ subslot} test {test-id | test-id-range | all} diagnostic monitor interval {bay slot/ bay | slot slot-no | subslot slot/ subslot} test {test-id | test-id-range | all} hh:mm:ss milliseconds days diagnostic monitor syslog diagnostic monitor threshold {bay slot/ bay | slot slot-no | subslot slot/ subslot} test {test-id | test-id-range | all} failure count failures [ {runs | days | hours | minutes | seconds | milliseconds} window_size]")
  k["diagnostic ondemand"] = NewKeyword("diagnostic ondemand", "", "diagnostic ondemand {iteration iteration-count | action-on-failure {continue error-count | stop}}")
  k["diagnostic schedule module"] = NewKeyword("diagnostic schedule module", "", "diagnostic schedule module {module-number | slot/subslot} test {test-id | all | complete | minimal | non-disruptive | [per-port [port {interface-port-number | port-number-list | all}]]} {on month dd yyyy hh:mm | daily hh:mm | weekly day-of-week hh:mm} no diagnostic schedule module {module-number | slot/subslot} test {test-id | all | complete | minimal | non-disruptive | [per-port [port {interface-port-number | port-number-list | all}]]} {on month dd yyyy hh:mm | daily hh:mm | weekly day-of-week hh:mm}")
  k["diagnostic start"] = NewKeyword("diagnostic start", "", "diagnostic start module num test {test-id | test-id-range | minimal | complete | basic | per-port | non-disruptive | all} [port {num | port#-range | all}] diagnostic start system test all Cisco UBR10012 Universal Broadband Router diagnostic start {bay slot/ bay | slot slot-no} test {test-id | test-id-range | all | complete | minimal | non-disruptive} diagnostic start subslot slot/subslot test {test-id | test-id-range | all | complete | minimal | non-disruptive | [per-port [port {num | port#-range | all}]]}")
  k["diagnostic stop"] = NewKeyword("diagnostic stop", "", "diagnostic stop module num Cisco UBR10012 Universal Broadband Router diagnostic stop {bay slot/ bay | slot slot-no | subslot slot/ subslot}")
  k["dir"] = NewKeyword("dir", "", "dir [/ all] [/ recursive] [all-filesystems] [filesystem: ] [file-url]")
  k["disable"] = NewKeyword("disable", "", "disable [privilege-level]")
  k["disconnect-character"] = NewKeyword("disconnect-character", "", "disconnect-character ascii-number no disconnect-character")
  k["dispatch-character"] = NewKeyword("dispatch-character", "", "dispatch-character ascii-number1 [ascii-number2. . . ] no dispatch-character ascii-number1 [ascii-number2. . . ]")
  k["dispatch-machine"] = NewKeyword("dispatch-machine", "", "dispatch-machine name no dispatch-machine")
  k["dispatch-timeout"] = NewKeyword("dispatch-timeout", "", "dispatch-timeout milliseconds no dispatch-timeout")
  k["do"] = NewKeyword("do", "", "do command")
  k["downward-compatible-config"] = NewKeyword("downward-compatible-config", "", "downward-compatible-config version no downward-compatible-config")
  k["editing"] = NewKeyword("editing", "", "editing no editing")
  k["enable"] = NewKeyword("enable", "", "enable [privilege-level] [view [view-name] ]")
  k["enable last-resort"] = NewKeyword("enable last-resort", "", "no enable last-resort {password | succeed} no enable last-resort")
  k["end"] = NewKeyword("end", "", "end")
  k["environment-monitor shutdown temperature"] = NewKeyword("environment-monitor shutdown temperature", "", "environment-monitor shutdown temperature [rommon | powerdown] no environment-monitor shutdown temperature [rommon | powerdown]")
  k["environment temperature-controlled"] = NewKeyword("environment temperature-controlled", "", "environment temperature-controlled no environment temperature-controlled")
  k["erase"] = NewKeyword("erase", "", "erase {/all nvram: | /no-squeeze-reserve-space filesystem: | filesystem: | startup-config} Cisco 7600 Series Routers and Cisco ASR 1000 Series Routers erase {/all nvram: | filesystem: | startup-config}")
  k["erase bootflash"] = NewKeyword("erase bootflash", "", "")
  k["errdisable detect cause"] = NewKeyword("errdisable detect cause", "", "errdisable detect cause {all | bpduguard | dtp-flap | l2ptguard | link-flap | packet-buffer-error | pagp-flap | rootguard | udld} no errdisable detect cause {all | bpduguard | dtp-flap | l2ptguard | link-flap | pagp-flap | rootguard | udld}")
  k["errdisable recovery"] = NewKeyword("errdisable recovery", "", "errdisable recovery {cause {all | arp-inspection | bpduguard | channel-misconfig | dhcp-rate-limit | dtp-flap | gbic-invalid | l2ptguard | link-flap | pagp-flap | psecure-violation | security-violation | rootguard | udld | unicast-flood} | interval seconds} no errdisable recovery {cause {all | arp-inspection | bpduguard | channel-misconfig | dhcp-rate-limit | dtp-flap | gbic-invalid | l2ptguard | link-flap | pagp-flap | psecure-violation | security-violation | rootguard | udld | unicast-flood} | interval seconds}")
  k["escape-character"] = NewKeyword("escape-character", "", "escape-character {break | char | default | none | soft} no escape-character [soft] default escape-character [soft]")
  k["exec"] = NewKeyword("exec", "", "exec no exec")
  k["exec-banner"] = NewKeyword("exec-banner", "", "exec-banner no exec-banner")
  k["exec-character-bits"] = NewKeyword("exec-character-bits", "", "exec-character-bits {7 | 8} no exec-character-bits")
  k["exec-timeout"] = NewKeyword("exec-timeout", "", "exec-timeout minutes [seconds] no exec-timeout")
  k["execute-on"] = NewKeyword("execute-on", "", "execute-on {slot slot-number | all | master} command")
  k["exit (EXEC)"] = NewKeyword("exit (EXEC)", "", "exit")
  k["exit (global)"] = NewKeyword("exit (global)", "", "exit")
  k["factory-reset all"] = NewKeyword("factory-reset all", "", "")
  k["factory-reset keep-licensing-info"] = NewKeyword("factory-reset keep-licensing-info", "", "")
  k["factory-reset all secure 3-pass"] = NewKeyword("factory-reset all secure 3-pass", "", "")
  k["file privilege"] = NewKeyword("file privilege", "", "file privilege level level no file privilege level level")
  k["file prompt"] = NewKeyword("file prompt", "", "file prompt prompt [alert | noisy | quiet]")
  k["file verify auto"] = NewKeyword("file verify auto", "", "file verify auto no file verify auto")
  k["format"] = NewKeyword("format", "", "Class B and Class C Flash File Systems format filesystem1: Class A Flash File System format [spare spare-number] filesystem1: [ [filesystem2:] [monlib-filename] ]")
  k["fsck"] = NewKeyword("fsck", "", "Supported Platforms Other than the Cisco 7600 Series and Cisco ASR1000 Series Routers fsck [/ nocrc] [/ automatic] [/ all] [/ force] [filesystem:] Cisco 7600 Series Routers fsck [/ automatic] [/ all] [/ force] [filesystem:] Cisco ASR 1000 Series Routers fsck [/ all] [/ force] [filesystem:]")
  k["full-help"] = NewKeyword("full-help", "", "full-help")
  k["help"] = NewKeyword("help", "", "help")
  k["hidekeys"] = NewKeyword("hidekeys", "", "hidekeys no hidekeys")
  k["history"] = NewKeyword("history", "", "history no history")
  k["history size"] = NewKeyword("history size", "", "history size number-of-lines no history size")
  k["hold-character"] = NewKeyword("hold-character", "", "hold-character ascii-number no hold-character")
  k["hostname"] = NewKeyword("hostname", "", "hostname name")
  k["hw-module reset"] = NewKeyword("hw-module reset", "", "hw-module module num reset")
  k["hw-module shutdown"] = NewKeyword("hw-module shutdown", "", "hw-module module num shutdown")
  k["insecure"] = NewKeyword("insecure", "", "insecure no insecure")
  k["install"] = NewKeyword("install", "", "install {abort | activate | file {bootflash: | flash: | harddisk: | webui:} [auto-abort-timer timer timer prompt-level {all | none}] | add file {bootflash: | flash: | ftp: | harddisk: | http: | https: | pram: | rcp: | scp: | tftp: | webui:} [activate [auto-abort-timer timer prompt-level {all | none}commit]] | commit | auto-abort-timer stop | deactivate file {bootflash: | flash: | harddisk: | webui:} | label id {description description | label-name name} | remove {file {bootflash: | flash: | harddisk: | webui:} | inactive } | | rollback to {base | committed | id {install-ID } | label {label-name}}}")
  k["international"] = NewKeyword("international", "", "international no international")
  k["ip bootp server"] = NewKeyword("ip bootp server", "", "ip bootp server no ip bootp server")
  k["ip finger"] = NewKeyword("ip finger", "", "ip finger [rfc-compliant] no ip finger")
  k["ip ftp passive"] = NewKeyword("ip ftp passive", "", "ip ftp passive no ip ftp passive")
  k["ip ftp password"] = NewKeyword("ip ftp password", "", "ip ftp password [type] password no ip ftp password")
  k["ip ftp source-interface"] = NewKeyword("ip ftp source-interface", "", "ip ftp source-interface interface-type interface-number no ip ftp source-interface")
  k["ip ftp username"] = NewKeyword("ip ftp username", "", "ip ftp username username no ip ftp username")
  k["ip rarp-server"] = NewKeyword("ip rarp-server", "", "ip rarp-server ip-address no ip rarp-server ip-address")
  k["ip rcmd domain-lookup"] = NewKeyword("ip rcmd domain-lookup", "", "ip rcmd domain-lookup no ip rcmd domain-lookup")
  k["ip rcmd rcp-enable"] = NewKeyword("ip rcmd rcp-enable", "", "ip rcmd rcp-enable no ip rcmd rcp-enable")
  k["ip rcmd remote-host"] = NewKeyword("ip rcmd remote-host", "", "ip rcmd remote-host local-username {ip-address | host-name} remote-username [enable [level] ] no ip rcmd remote-host local-username {ip-address | host-name} remote-username [enable [level] ]")
  k["ip rcmd remote-username"] = NewKeyword("ip rcmd remote-username", "", "ip rcmd remote-username username no ip rcmd remote-username username")
  k["ip rcmd rsh-enable"] = NewKeyword("ip rcmd rsh-enable", "", "ip rcmd rsh-enable no ip rcmd rsh-enable")
  k["ip rcmd source-interface"] = NewKeyword("ip rcmd source-interface", "", "ip rcmd source-interface interface-id no ip rcmd source-interface interface-id")
  k["ip telnet source-interface"] = NewKeyword("ip telnet source-interface", "", "ip telnet source-interface interface no ip telnet source-interface")
  k["ip tftp blocksize"] = NewKeyword("ip tftp blocksize", "", "ip tftp blocksize bytes no ip tftp blocksize")
  k["ip tftp boot-interface"] = NewKeyword("ip tftp boot-interface", "", "ip tftp boot-interface type number no ip tftp boot-interface")
  k["ip tftp min-timeout"] = NewKeyword("ip tftp min-timeout", "", "ip tftp min-timeout seconds no ip tftp min-timeout")
  k["ip tftp source-interface"] = NewKeyword("ip tftp source-interface", "", "ip tftp source-interface interface-type interface-number no ip tftp source-interface")
  k["ip wccp web-cache accelerated"] = NewKeyword("ip wccp web-cache accelerated", "", "ip wccp web-cache accelerated [ [group-address groupaddress] | [redirect-list access-list] | [group-list access-list] | [password password]] no ip wccp web-cache accelerated")
  k["length"] = NewKeyword("length", "", "length screen-length no length")
  k["load-interval"] = NewKeyword("load-interval", "", "load-interval seconds no load-interval seconds")
  k["location"] = NewKeyword("location", "", "location text no location")
  k["lock"] = NewKeyword("lock", "", "lock")
  k["lockable"] = NewKeyword("lockable", "", "lockable no lockable")
  k["log config"] = NewKeyword("log config", "", "log config")
  k["logging buffered"] = NewKeyword("logging buffered", "", "logging buffered [discriminator discriminator-name] [buffer-size] [severity-level] no logging buffered default logging buffered")
  k["logging buginf"] = NewKeyword("logging buginf", "", "logging buginf no logging buginf")
  k["logging enable"] = NewKeyword("logging enable", "", "logging enable no logging enable")
  k["logging esm config"] = NewKeyword("logging esm config", "", "logging esm config no logging esm config")
  k["logging event bundle-status"] = NewKeyword("logging event bundle-status", "", "logging event bundle-status no logging event bundle-status")
  k["logging event link-status (global configuration)"] = NewKeyword("logging event link-status (global configuration)", "", "logging event link-status {default | boot} no logging event link-status {default | boot}")
  k["logging event link-status (interface configuration)"] = NewKeyword("logging event link-status (interface configuration)", "", "logging event link-status [bchan | dchan | nfas] no logging event link-status [bchan | dchan | nfas]")
  k["logging event subif-link-status"] = NewKeyword("logging event subif-link-status", "", "logging event subif-link-status no logging event subif-link-status")
  k["logging event trunk-status"] = NewKeyword("logging event trunk-status", "", "logging event trunk-status no logging event trunk-status")
  k["logging reload"] = NewKeyword("logging reload", "", "logging reload [message-limit number] [severity-level | alerts | critical | debugging | emergencies | errors | informational | notifications | warnings] no logging reload")
  k["logging ip access-list cache (global configuration)"] = NewKeyword("logging ip access-list cache (global configuration)", "", "logging ip access-list cache {entries entries | interval seconds | rate-limit pps | threshold packets} no logging ip access-list cache [entries | interval | rate-limit | threshold]")
  k["logging ip access-list cache (interface configuration)"] = NewKeyword("logging ip access-list cache (interface configuration)", "", "logging ip access-list cache [in | out] no logging ip access-list cache")
  k["logging persistent (config-archive-log-cfg)"] = NewKeyword("logging persistent (config-archive-log-cfg)", "", "logging persistent {auto | manual} no logging persistent {auto | manual}")
  k["logging persistent reload (config-archive-log-cfg)"] = NewKeyword("logging persistent reload (config-archive-log-cfg)", "", "logging persistent reload no logging persistent reload")
  k["logging purge-log buffer days"] = NewKeyword("logging purge-log buffer days", "", "logging purge-log buffer days number-of-days [ time deletion-start-time ] no logging purge-log buffer")
  k["logging size"] = NewKeyword("logging size", "", "logging size entries no logging size")
  k["logging synchronous"] = NewKeyword("logging synchronous", "", "logging synchronous [level severity-level | all] [limit number-of-lines] no logging synchronous [level severity-level | all] [limit number-of-lines]")
  k["logging system"] = NewKeyword("logging system", "", "logging system [disk name] no logging system")
  k["logout"] = NewKeyword("logout", "", "logout")
  k["logout-warning"] = NewKeyword("logout-warning", "", "logout-warning [seconds] logout-warning")
  k["macro (global configuration)"] = NewKeyword("macro (global configuration)", "", "macro {global {apply macro-name | description text | trace macro-name [keyword-to-value] value-first-keyword [keyword-to-value] value-second-keyword [keyword-to-value] value-third-keyword [keyword-to-value] } | name macro-name} no macro {global {apply macro-name | description text | trace macro-name [keyword-to-value] value-first-keyword [keyword-to-value] value-second-keyword [keyword-to-value] value-third-keyword [keyword-to-value] } | name macro-name}")
  k["macro (interface configuration)"] = NewKeyword("macro (interface configuration)", "", "macro {apply macro-name | description text | trace macro-name [keyword-to-value] value-first-keyword [keyword-to-value] value-second-keyword [keyword-to-value] value-third-keyword [keyword-to-value] } no macro {apply macro-name | description text | trace macro-name [keyword-to-value] value-first-keyword [keyword-to-value] value-second-keyword [keyword-to-value] value-third-keyword [keyword-to-value] }")
  k["maximum"] = NewKeyword("maximum", "", "maximum number no maximum number")
  k["memory cache error-recovery"] = NewKeyword("memory cache error-recovery", "", "memory cache error-recovery {L1 | L2 | L3} {data | inst} no memory cache error-recovery {L1 | L2 | L3} {data | inst}")
  k["memory cache error-recovery options"] = NewKeyword("memory cache error-recovery options", "", "memory cache error-recovery options {abort-if-same-content | blocking-mode | max-recoveries value | nvram-report | parity-check | window seconds} no memory cache error-recovery options {abort-if-same-content | blocking-mode | max-recoveries value | nvram-report | parity-check | window seconds}")
  k["memory free low-watermark"] = NewKeyword("memory free low-watermark", "", "memory free low-watermark {processor threshold | io threshold} no memory free low-watermark")
  k["memory lite"] = NewKeyword("memory lite", "", "memory lite no memory lite")
  k["memory reserve"] = NewKeyword("memory reserve", "", "Syntax for Releases 15.0(1)M and 12.2(33)SRC and Later Releases memory reserve {console size | critical [total-size] } no memory reserve {console | critical} Syntax for Releases 12.2(33)SXI, Cisco IOS XE Release 2.1 and Later Releases memory reserve critical [total-size] no memory reserve critical")
  k["memory reserve critical"] = NewKeyword("memory reserve critical", "", "memory reserve critical kilobytes no memory reserve critical")
  k["memory sanity"] = NewKeyword("memory sanity", "", "memory sanity [buffer | queue | all] no memory sanity")
  k["memory scan"] = NewKeyword("memory scan", "", "memory scan no memory scan")
  k["memory-size iomem"] = NewKeyword("memory-size iomem", "", "memory-size iomem i/o-memory-percentage no memory-size iomem")
  k["menu (EXEC)"] = NewKeyword("menu (EXEC)", "", "menu menu-name")
  k["menu menu-name single-space"] = NewKeyword("menu menu-name single-space", "", "menu menu-name single-space")
  k["menu clear-screen"] = NewKeyword("menu clear-screen", "", "menu clear-screen menu-name clear-screen")
  k["menu command"] = NewKeyword("menu command", "", "menu command menu menu-name command menu-item {command | menu-exit}")
  k["menu default"] = NewKeyword("menu default", "", "menu menu-name default menu-item")
  k["menu line-mode"] = NewKeyword("menu line-mode", "", "menu menu-name line-mode")
  k["menu options"] = NewKeyword("menu options", "", "Cisco IOS Release 10.0, 12.2(33)SRA, 12.2(33)SXI , and Later Releases menu menu-name options menu-item [login] [pause] Cisco IOS XE Release 3.1S and Later Releases menu menu-name options menu-item {login | pause}")
  k["menu prompt"] = NewKeyword("menu prompt", "", "menu menu-name prompt d prompt d")
  k["menu status-line"] = NewKeyword("menu status-line", "", "menu menu-name status-line")
  k["menu text"] = NewKeyword("menu text", "", "menu menu-name text menu-item menu-text")
  k["menu title"] = NewKeyword("menu title", "", "menu menu-name title d menu-title d")
  k["microcode (12000)"] = NewKeyword("microcode (12000)", "", "microcode {oc12-atm | oc12-pos | oc3-pos4} {flash file-id [slot] | system [slot] } no microcode {oc12-atm | oc12-pos | oc3-pos4} [flash file-id [slot] | system [slot] ]")
  k["microcode (7000/7500)"] = NewKeyword("microcode (7000/7500)", "", "microcode interface-type {flash-filesystem:filename [slot] | rom | system [slot] } no microcode interface-type {flash-filesystem:filename [slot] | rom | system [slot] }")
  k["microcode (7200)"] = NewKeyword("microcode (7200)", "", "microcode {ecpa | pcpa} location no microcode {ecpa | pcpa}")
  k["microcode reload (12000)"] = NewKeyword("microcode reload (12000)", "", "microcode reload [slot-number]")
  k["microcode reload (7000 7500)"] = NewKeyword("microcode reload (7000 7500)", "", "microcode reload [slot-number]")
  k["microcode reload (7200)"] = NewKeyword("microcode reload (7200)", "", "microcode reload {all | ecpa [slot slot-number] | pcpa [slot slot-number]}")
  k["mkdir"] = NewKeyword("mkdir", "", "mkdir directory")
  k["mkdir disk0:"] = NewKeyword("mkdir disk0:", "", "mkdir disk0:")
  k["mode"] = NewKeyword("mode", "", "Syntax for 12.2S Release mode {rpr | rpr-plus | sso} Syntax for Cisco IOS XE Release 2.5 and Later Releases mode {rpr | sso} Syntax for 12.2XNE Release mode sso")
  k["monitor event-trace (EXEC)"] = NewKeyword("monitor event-trace (EXEC)", "", "monitor event-trace component {clear | continuous | destroy-buffer | disable | dump [pretty] | enable | one-shot} Cisco 10000 Series Routers monitor event-trace component {disable | dump | enable | size | stacktrace} Catalyst 6500 Series Switches and Cisco 7600 Series Routers monitor event-trace all-traces {continuous [cancel] | dump [merged] [pretty]} monitor event-trace l3 {clear | continuous [cancel] | disable | dump [pretty] | enable | interface type mod/port | one-shot} monitor event-trace spa {clear | continuous [cancel] | disable | dump [pretty] | enable | one-shot} monitor event-trace subsys {clear | continuous [cancel] | disable | dump [pretty] | enable | one-shot}")
  k["monitor event-trace (global)"] = NewKeyword("monitor event-trace (global)", "", "monitor event-trace component {disable | dump-file filename | enable | size number | stacktrace number} timestamps [datetime [localtime] [msec] [show-timezone] | uptime] Cisco 10000 Series Routers monitor event-trace component {disable | dump-file filename | enable | clear | continuous | one-shot}")
  k["monitor event-trace crypto pki"] = NewKeyword("monitor event-trace crypto pki", "", "monitor event-trace crypto pki { error | event | exceptions } no monitor event-trace crypto pki { error | event | exceptions }")
  k["monitor event-trace crypto ipsec"] = NewKeyword("monitor event-trace crypto ipsec", "", "monitor event-trace crypto ipsec { error | event | exceptions } no monitor event-trace crypto ipsec { error | event | exceptions }")
  k["monitor event-trace crypto ikev2"] = NewKeyword("monitor event-trace crypto ikev2", "", "monitor event-trace crypto ikev2 { error | event | exceptions } no monitor event-trace crypto ikev2 { error | event | exceptions }")
  k["monitor event-trace crypto ikev2 event"] = NewKeyword("monitor event-trace crypto ikev2 event", "", "monitor event-trace dump-traces [pretty]")
  k["monitor event-trace crypto ikev2 event dump-file"] = NewKeyword("monitor event-trace crypto ikev2 event dump-file", "", "monitor event-trace dump-traces [pretty]")
  k["monitor event-trace crypto ikev2 event size"] = NewKeyword("monitor event-trace crypto ikev2 event size", "", "monitor event-trace dump-traces [pretty]")
  k["monitor event-trace crypto ikev2 event stacktrace"] = NewKeyword("monitor event-trace crypto ikev2 event stacktrace", "", "monitor event-trace dump-traces [pretty]")
  k["monitor event-trace crypto pki"] = NewKeyword("monitor event-trace crypto pki", "", "monitor event-trace crypto pki { error | event } no monitor event-trace crypto pki { error | event }")
  k["monitor event-trace dump-traces"] = NewKeyword("monitor event-trace dump-traces", "", "monitor event-trace dump-traces [pretty]")
  k["monitor pcm-tracer capture-destination"] = NewKeyword("monitor pcm-tracer capture-destination", "", "monitor pcm-tracer capture-destination destination no monitor pcm-tracer capture-destination")
  k["monitor pcm-tracer delayed-start"] = NewKeyword("monitor pcm-tracer delayed-start", "", "monitor pcm-tracer delayed-start seconds no monitor pcm-tracer delayed-start")
  k["monitor pcm-tracer profile"] = NewKeyword("monitor pcm-tracer profile", "", "monitor pcm-tracer profile profile-number { {no} capture-tdm { [T1 | E1] | {analog-voice-port | bri-voice-port}port | ds0 | channel-numnumber}} no monitor pcm-tracer profile profile-number")
  k["monitor permit-list"] = NewKeyword("monitor permit-list", "", "Activate monitoring monitor permit-list no monitor permit-list Activate monitoring on one port monitor permit-list destination interface interface-type slot/port no monitor permit-list destination interface interface-type slot/port Activate monitoring on one range of ports monitor permit-list destination interface interface-type slot/port-last-port no monitor permit-list destination interface interface-type slot/port-last-port Activate monitoring on two or more ranges of ports monitor permit-list destination interface interface-type slot/port-last-port , [port-last-port] no monitor permit-list destination interface interface-type slot/port-last-port , [port-last-port]")
  k["monitor session egress replication-mode"] = NewKeyword("monitor session egress replication-mode", "", "Cisco IOS Release 12.2(33)SXH2a and Later Releases monitor session egress replication-mode centralized no monitor session egress replication-mode centralized Cisco IOS Release 12.2(33)SXH, SXH1, and SXH2 monitor session egress replication-mode distributed no monitor session egress replication-mode distributed")
  k["monitor session type"] = NewKeyword("monitor session type", "", "monitor session span-session-number type {erspan-destination | erspan-source | local | local-tx | rspan-destination | rspan-source} no monitor session span-session-number type {erspan-destination | erspan-source | local | local-tx | rspan-destination | rspan-source}")
  k["mop device-code"] = NewKeyword("mop device-code", "", "mop device-code commandmop device-code {cisco | ds200} no mop device-code {cisco | ds200}")
  k["mop retransmit-timer"] = NewKeyword("mop retransmit-timer", "", "mop retransmit-timer seconds no mop retransmit-timer")
  k["mop retries"] = NewKeyword("mop retries", "", "mop retries count no mop retries")
  k["more"] = NewKeyword("more", "", "more [/ascii | /binary | /compressed | /ebcdic] url")
  k["more url begin"] = NewKeyword("more url begin", "", "{more url | begin regular-expression}")
  k["more url exclude"] = NewKeyword("more url exclude", "", "{more url | exclude regular-expression}")
  k["more url include"] = NewKeyword("more url include", "", "{more url | include regular-expression}")
  k["more flh:logfile"] = NewKeyword("more flh:logfile", "", "more flh:logfile")
  k["motd-banner"] = NewKeyword("motd-banner", "", "motd-banner no motd-banner")
  k["name-connection"] = NewKeyword("name-connection", "", "name-connection")
  k["nmsp enable"] = NewKeyword("nmsp enable", "", "nmsp enable no nmsp enable")
  k["nmsp strong-cipher"] = NewKeyword("nmsp strong-cipher", "", "nmsp strong-cipher no nmsp strong-cipher")
  k["no menu"] = NewKeyword("no menu", "", "no menu menu-name")
  k["notify"] = NewKeyword("notify", "", "notify no notify")
  k["notify syslog"] = NewKeyword("notify syslog", "", "notify syslog [contenttype {plaintext | xml}] no notify syslog [contenttype {plaintext | xml}]")
  k["padding"] = NewKeyword("padding", "", "padding ascii-number count no padding ascii-number")
  k["parity"] = NewKeyword("parity", "", "parity {none | even | odd | space | mark} no parity")
  k["parser cache"] = NewKeyword("parser cache", "", "parser cache no parser cache")
  k["parser command serializer"] = NewKeyword("parser command serializer", "", "parser command serializer no parser command serializer")
  k["parser config cache interface"] = NewKeyword("parser config cache interface", "", "parser config cache interface no parser config cache interface")
  k["parser config partition"] = NewKeyword("parser config partition", "", "parser config partition no parser config partition")
  k["parser maximum"] = NewKeyword("parser maximum", "", "parser maximum {latencylimit | utilizationlimit} no parser maximum {latency | utilization}")
  k["partition"] = NewKeyword("partition", "", "Cisco 1600 Series and Cisco 3600 Series Routers partition flash-filesystem: [number-of-partitions] [partition-size] no partition flash-filesystem: All Other Class B Platforms partition flash partitions [size1 size2] no partition flash")
  k["path (archive configuration)"] = NewKeyword("path (archive configuration)", "", "path url no path url")
  k["periodic"] = NewKeyword("periodic", "", "periodic days-of-the-week hh:mm to [days-of-the-week] hh:mm no periodic days-of-the-week hh:mm to [days-of-the-week] hh:mm")
  k["ping"] = NewKeyword("ping", "", "ping [ [protocol [tag]] {host-name | system-address}]")
  k["ping (privileged)"] = NewKeyword("ping (privileged)", "", "ping [hostname | system-address | [protocol | tag] {hostname | system-address}] [data [hex-data-pattern] | df-bit | repeat [repeat-count] | size [datagram-size] | source [source-address | async | bvi | ctunnel | dialer | ethernet | fastethernet | lex | loopback | multilink | null | port-channel | tunnel | vif | virtual-template | virtual-tokenring | xtagatm] | timeout [seconds] | validate]")
  k["ping ip"] = NewKeyword("ping ip", "", "ping ip {host-name | ip-address} [data [hex-data-pattern] | df-bit | repeat [repeat-count] | tos [service value] | size [datagram-size] source {source-address | source-interface}] [timeout seconds] [validate] [verbose]")
  k["ping srb"] = NewKeyword("ping srb", "", "ping srb name")
  k["ping vrf"] = NewKeyword("ping vrf", "", "ping vrf vrf-name [tag] [connection] target-address [connection-options]")
  k["platform qfp drops threshold"] = NewKeyword("platform qfp drops threshold", "", "platform qfp drops threshold { per-cause | | drop_id | | threshold_value | total threshold_value }")
  k["platform shell"] = NewKeyword("platform shell", "", "platform shell no platform shell")
  k["power enable"] = NewKeyword("power enable", "", "power enable module slot no power enable module slot")
  k["power redundancy-mode"] = NewKeyword("power redundancy-mode", "", "power redundancy-mode {combined | redundant}")
  k["printer"] = NewKeyword("printer", "", "printer printer-name {line number | rotary number} [formfeed] [jobtimeout seconds] [newline-convert] [jobtypes type] no printer printer-name")
  k["private"] = NewKeyword("private", "", "private no private")
  k["process cpu statistics limit entry-percentage"] = NewKeyword("process cpu statistics limit entry-percentage", "", "process cpu statistics limit entry-percentage number [size seconds] no process cpu statistics limit entry-percentage")
  k["process cpu threshold type"] = NewKeyword("process cpu threshold type", "", "process cpu threshold type {total | process | interrupt} rising percentage interval seconds [falling fall-percentage interval seconds] no process cpu threshold type {total | process | interrupt}")
  k["process-max-time"] = NewKeyword("process-max-time", "", "process-max-time milliseconds no process-max-time milliseconds")
  k["prompt"] = NewKeyword("prompt", "", "prompt string no prompt [string]")
  k["prompt config"] = NewKeyword("prompt config", "", "prompt config hostname-length number no prompt [config]")
  k["pwd"] = NewKeyword("pwd", "", "pwd")
  k["refuse-message"] = NewKeyword("refuse-message", "", "refuse-message d message d no refuse-message")
  k["regexp optimize"] = NewKeyword("regexp optimize", "", "regexp optimize no regexp optimize")
  k["reload"] = NewKeyword("reload", "", "reload [/verify | /noverify] [ [warm file] [line | in [hhh:mm | mmm [text] ] | at hh:mm [day month] [text] ] | reason [reason-string] | cancel]")
  k["remote command"] = NewKeyword("remote command", "", "remote command {module num | standby-rp | switch} command")
  k["remote login"] = NewKeyword("remote login", "", "remote login {module num | standby-rp | switch}")
  k["remote-span"] = NewKeyword("remote-span", "", "remote-span no remote-span")
  k["rename"] = NewKeyword("rename", "", "rename url1 url2")
  k["request consent-token accept-response shell-access"] = NewKeyword("request consent-token accept-response shell-access", "", "request consent-token accept-response shell-access response-string")
  k["request consent-token generate-challenge shell-access"] = NewKeyword("request consent-token generate-challenge shell-access", "", "request consent-token generate-challenge shell-access auth-timeout time-validity-slot")
  k["request consent-token terminate-auth"] = NewKeyword("request consent-token terminate-auth", "", "request consent-token terminate-auth")
  k["request platform software package describe file"] = NewKeyword("request platform software package describe file", "", "request platform software package describe file URL [detail] [verbose]")
  k["request platform software package expand file"] = NewKeyword("request platform software package expand file", "", "request platform software package expand file source-URL [to destination-URL] [force] [verbose] [wipe]")
  k["request platform software package install commit"] = NewKeyword("request platform software package install commit", "", "request platform software package install rp rp-slot-number commit [verbose]")
  k["request platform software package install file"] = NewKeyword("request platform software package install file", "", "request platform software package install rp rp-slot-number file file-URL [auto-rollback minutes] [provisioning-file URL] [slot slot-number] [bay bay-number] [force] [on-reboot] [verbose]")
  k["request platform software package install rollback"] = NewKeyword("request platform software package install rollback", "", "request platform software package install rp rp-slot-number rollback [as-booted | provisioning-file provisioning-file-URL] [force] [on-reboot] [verbose]")
  k["request platform software package install snapshot"] = NewKeyword("request platform software package install snapshot", "", "request platform software package install rp rp-slot-number snapshot to URL [as snapshot-provisioning-filename] [force] [verbose] [wipe]")
  k["request platform software process release"] = NewKeyword("request platform software process release", "", "request platform software process release slot all")
  k["request platform software system shell"] = NewKeyword("request platform software system shell", "", "request platform software system shell [rp | esp | sip]")
  k["request platform software shell session output format"] = NewKeyword("request platform software shell session output format", "", "request platform software shell session output format format")
  k["request platform software snapshot"] = NewKeyword("request platform software snapshot", "", "request platform software snapshot slot {cancel | create | delete | restore} name")
  k["request platform software vty attach"] = NewKeyword("request platform software vty attach", "", "request platform software vty attach [permanent]")
  k["revision"] = NewKeyword("revision", "", "revision version no revision")
  k["rmdir"] = NewKeyword("rmdir", "", "rmdir directory")
  k["rommon-pref"] = NewKeyword("rommon-pref", "", "rommon-pref [readonly | upgrade]")
  k["route-converge-interval"] = NewKeyword("route-converge-interval", "", "route-converge-interval seconds no route-converge-interval")
  k["rsh"] = NewKeyword("rsh", "", "rsh {ip-address | host} [/user username] remote-command")
  k["scheduler allocate"] = NewKeyword("scheduler allocate", "", "scheduler allocate interrupt-time process-time no scheduler allocate")
  k["scheduler heapcheck enable"] = NewKeyword("scheduler heapcheck enable", "", "scheduler heapcheck enable no scheduler heapcheck enable")
  k["scheduler heapcheck poll"] = NewKeyword("scheduler heapcheck poll", "", "scheduler heapcheck poll no scheduler heapcheck poll")
  k["scheduler heapcheck process"] = NewKeyword("scheduler heapcheck process", "", "scheduler heapcheck process [memory [fast] [io] [multibus] [pci] [processor] [checktype {all | data | magic | mlite-data | pointer | refcount | lite-chunks}]] no scheduler heapcheck process")
  k["scheduler interrupt mask profile"] = NewKeyword("scheduler interrupt mask profile", "", "scheduler interrupt mask profile no scheduler interrupt mask profile")
  k["scheduler interrupt mask size"] = NewKeyword("scheduler interrupt mask size", "", "scheduler interrupt mask size buffersize no scheduler interrupt mask size")
  k["scheduler interrupt mask time"] = NewKeyword("scheduler interrupt mask time", "", "scheduler interrupt mask time threshold-time no scheduler interrupt mask time")
  k["scheduler interval"] = NewKeyword("scheduler interval", "", "scheduler interval milliseconds no scheduler interval")
  k["scheduler isr-watchdog"] = NewKeyword("scheduler isr-watchdog", "", "scheduler isr-watchdog no scheduler isr-watchdog")
  k["scheduler max-sched-time"] = NewKeyword("scheduler max-sched-time", "", "scheduler max-sched-time milliseconds no scheduler max-sched-time")
  k["scheduler process-watchdog"] = NewKeyword("scheduler process-watchdog", "", "scheduler process-watchdog {hang | normal | reload | terminate} no scheduler process-watchdog")
  k["scheduler timercheck process"] = NewKeyword("scheduler timercheck process", "", "scheduler timercheck process pid no scheduler timercheck process pid")
  k["scheduler timercheck system context"] = NewKeyword("scheduler timercheck system context", "", "scheduler timercheck system context no scheduler timercheck system context")
  k["send"] = NewKeyword("send", "", "send {line-number | * | aux number | console number | log number [msg-ext] | tty number | vty number | xsm [client client-id] message text}")
  k["service compress-config"] = NewKeyword("service compress-config", "", "service compress-config no service compress-config")
  k["service config"] = NewKeyword("service config", "", "service config no service config")
  k["service counters max age"] = NewKeyword("service counters max age", "", "service counters max age seconds no service counters max age")
  k["service decimal-tty"] = NewKeyword("service decimal-tty", "", "service decimal-tty no service decimal-tty")
  k["service exec-wait"] = NewKeyword("service exec-wait", "", "service exec-wait no service exec-wait")
  k["service finger"] = NewKeyword("service finger", "", "")
  k["service hide-telnet-address"] = NewKeyword("service hide-telnet-address", "", "service hide-telnet-address no service hide-telnet-address")
  k["service linenumber"] = NewKeyword("service linenumber", "", "service linenumber no service linenumber")
  k["service nagle"] = NewKeyword("service nagle", "", "service nagle no service nagle")
  k["service prompt config"] = NewKeyword("service prompt config", "", "service prompt config no service prompt config")
  k["service sequence-numbers"] = NewKeyword("service sequence-numbers", "", "service sequence-numbers no service sequence-numbers")
  k["service slave-log"] = NewKeyword("service slave-log", "", "service slave-log no service slave-log")
  k["service tcp-keepalives-in"] = NewKeyword("service tcp-keepalives-in", "", "service tcp-keepalives-in no service tcp-keepalives-in")
  k["service tcp-keepalives-out"] = NewKeyword("service tcp-keepalives-out", "", "service tcp-keepalives-out no service tcp-keepalives-out")
  k["service tcp-small-servers"] = NewKeyword("service tcp-small-servers", "", "service tcp-small-servers [max-servers number | no-limit] no service tcp-small-servers [max-servers number | no-limit]")
  k["service telnet-zeroidle"] = NewKeyword("service telnet-zeroidle", "", "service telnet-zero-idle no service telnet-zeroidle")
  k["service timestamps"] = NewKeyword("service timestamps", "", "service timestamps [debug | log] [uptime | datetime [msec]] [localtime] [show-timezone] [year] no service timestamps [debug | log]")
  k["service udp-small-servers"] = NewKeyword("service udp-small-servers", "", "service udp-small-servers [max-servers number | no-limit] no service udp-small-servers [max-servers number | no-limit]")
  k["service-module apa traffic-management"] = NewKeyword("service-module apa traffic-management", "", "service-module apa traffic-management [monitor | inline]")
  k["service-module wlan-ap bootimage"] = NewKeyword("service-module wlan-ap bootimage", "", "service-module wlan-ap interface number bootimage [autonomous | unified]")
  k["service-module wlan-ap reload"] = NewKeyword("service-module wlan-ap reload", "", "service-module wlan-ap interface number reload")
  k["service-module wlan-ap reset"] = NewKeyword("service-module wlan-ap reset", "", "service-module wlan-ap interface number reset [bootloader | default-config]")
  k["service-module wlan-ap session"] = NewKeyword("service-module wlan-ap session", "", "service-module wlan-ap interface number session [clear | disconnect]")
  k["service-module wlan-ap statistics"] = NewKeyword("service-module wlan-ap statistics", "", "service-module wlan-ap interface number statistics")
  k["service-module wlan-ap status"] = NewKeyword("service-module wlan-ap status", "", "service-module wlan-ap interface number status")
  k["session slot"] = NewKeyword("session slot", "", "session slot mod processor processor-id")
  k["set memory debug incremental starting-time"] = NewKeyword("set memory debug incremental starting-time", "", "set memory debug incremental starting-time [none]")
  k["setup"] = NewKeyword("setup", "", "setup")
  k["show"] = NewKeyword("show", "", "show [current | pending]")
  k["show command append"] = NewKeyword("show command append", "", "{show command | append url}")
  k["show command begin"] = NewKeyword("show command begin", "", "{show command | begin regular-expression}")
  k["show command exclude"] = NewKeyword("show command exclude", "", "{show command | exclude regular-expression}")
  k["show command include"] = NewKeyword("show command include", "", "{show command | include regular-expression}")
  k["show command redirect"] = NewKeyword("show command redirect", "", "{show command | redirect url}")
  k["show command section"] = NewKeyword("show command section", "", "{show command | section [include | exclude] regular-expression}")
  k["show command tee"] = NewKeyword("show command tee", "", "{show command | tee [/ append] url}")
  k["show (Flash file system)"] = NewKeyword("show (Flash file system)", "", "Class A Flash File Systems show flash-filesystem: [all | chips | filesys] Class B Flash File Systems show flash-filesystem: [partition-number:] [all | chips | detailed | err | summary] Class C Flash File Systems show flash-filesystem :")
  k["show aliases"] = NewKeyword("show aliases", "", "show aliases [mode]")
  k["show alignment"] = NewKeyword("show alignment", "", "show alignment")
  k["show archive"] = NewKeyword("show archive", "", "show archive")
  k["show archive config differences"] = NewKeyword("show archive config differences", "", "show archive config differences [filename1(path) [filename2(path)] [ignorecase]]")
  k["show archive config incremental-diffs"] = NewKeyword("show archive config incremental-diffs", "", "show archive config incremental-diffs file")
  k["show archive config rollback timer"] = NewKeyword("show archive config rollback timer", "", "show archive config rollback timer")
  k["show archive log config"] = NewKeyword("show archive log config", "", "show archive log config {all | record-number [end-number] | user username [ session session-number] record-number [end-number] | statistics} [provisioning] [contenttype {plaintext | xml}] [persistent]")
  k["show as5400"] = NewKeyword("show as5400", "", "show as5400")
  k["show async bootp"] = NewKeyword("show async bootp", "", "show async bootp")
  k["show autoupgrade configuration unknown"] = NewKeyword("show autoupgrade configuration unknown", "", "show autoupgrade configuration unknown")
  k["show bcm560x"] = NewKeyword("show bcm560x", "", "show bcm560x name {offset | all} [raw]")
  k["show bootflash:"] = NewKeyword("show bootflash:", "", "show bootflash: [all | chips | filesys]")
  k["show bootvar"] = NewKeyword("show bootvar", "", "show bootvar")
  k["show buffers"] = NewKeyword("show buffers", "", "show buffers [ {address hex-address | failures | pool pool-name | detailed | processes | {all | assigned [process-id] | free | old | input-interface interface-type interface-number} | [pool pool-name]} [dump | header | packet | location pool-location]] Cisco Catalyst 4500e Series Switches running IOS XE software show buffers [detailed process id {address hex-address | all | assigned | failures | free | input-interface interface-type interface-number | old | pool pool-name} [dump | header | packet | location pool-location]]")
  k["show c2600"] = NewKeyword("show c2600", "", "show c2600")
  k["show c7200"] = NewKeyword("show c7200", "", "show c7200")
  k["show catalyst6000"] = NewKeyword("show catalyst6000", "", "show catalyst6000 {all | chassis-mac-address | switching-clock | traffic-meter}")
  k["show cls"] = NewKeyword("show cls", "", "show cls [brief]")
  k["show config id"] = NewKeyword("show config id", "", "show config id [detail]")
  k["show configuration id"] = NewKeyword("show configuration id", "", "show configuration id [detail]")
  k["show configuration lock"] = NewKeyword("show configuration lock", "", "show configuration lock")
  k["show context"] = NewKeyword("show context", "", "show context [summary | all | slot slot-number [crash-index] [all] [debug]]")
  k["show controllers (GRP image)"] = NewKeyword("show controllers (GRP image)", "", "show controllers [atm slot-number | clock | csar [register] | csc-fpga | dp83800 | fab-clk | fia [register] | pos [slot-number] [details] | queues [slot-number] | sca | xbar]")
  k["show controllers (line card image)"] = NewKeyword("show controllers (line card image)", "", "show controllers atm [ [port-number] [all | sar | summary]] show controllers fia [register] show controllers {frfab | tofab} {bma {microcode | ms-inst | register} | qelem start-queue-element [end-queue-element] | qnum start-queue-element [end-queue-element] | queues | statistics} show controllers io show controllers l3 show controllers pos {framers | queues | registers | rxsram port-number queue-start-address [queue-length] | txsram port-number queue-start-address [queue-length] } show controllers events [clear | punt-sniff [none | word1 | word2] | punt-verbose [all]]")
  k["show controllers logging"] = NewKeyword("show controllers logging", "", "show controllers vip slot-number logging")
  k["show controllers tech-support"] = NewKeyword("show controllers tech-support", "", "show controllers vip slot-number tech-support")
  k["show coverage history"] = NewKeyword("show coverage history", "", "show coverage history [all | first number-of-entries | last number-of-entries | status]")
  k["show data-corruption"] = NewKeyword("show data-corruption", "", "show data-corruption")
  k["show debugging"] = NewKeyword("show debugging", "", "show debugging")
  k["show declassify"] = NewKeyword("show declassify", "", "show declassify")
  k["show derived-config"] = NewKeyword("show derived-config", "", "show derived-config [interface type number]")
  k["show diagnostic cns"] = NewKeyword("show diagnostic cns", "", "show diagnostic cns {publish | subscribe}")
  k["show diagnostic sanity"] = NewKeyword("show diagnostic sanity", "", "show diagnostic sanity")
  k["show disk"] = NewKeyword("show disk", "", "show {disk0 | disk1} [all | filesys]")
  k["show disk0:"] = NewKeyword("show disk0:", "", "show disk0: [all | filesys]")
  k["show disk1:"] = NewKeyword("show disk1:", "", "show disk1: [all | filesys]")
  k["show drops"] = NewKeyword("show drops", "", "show drops { bqs | crypto| firewall| interface| ip-all| nat| punt| qfp| qos|history}")
  k["show environment"] = NewKeyword("show environment", "", "show environment commandshow environment [alarms | all | fans | hardware | last | leds | power-supply | table | temperature | voltages] Cisco 7000 Series, Cisco 7200 Series, Cisco 7304, and Cisco 7500 Series show environment commandshow environment [all | last | table] Cisco ASR 1000 Series show environment {all | counters | history sensor | location sensor | sensor sensor | table sensor} Cisco uBR10012 Routers show environment [all | last | subslot slot/ subslot | table]")
  k["show environment alarm"] = NewKeyword("show environment alarm", "", "show environment alarm [ {status | threshold} [frutype] ]")
  k["show environment connector"] = NewKeyword("show environment connector", "", "show environment connector [all | backplane | module number]")
  k["show environment cooling"] = NewKeyword("show environment cooling", "", "show environment cooling")
  k["show environment status"] = NewKeyword("show environment status", "", "show environment status [frutype]")
  k["show environment temperature"] = NewKeyword("show environment temperature", "", "show environment temperature [frutype]")
  k["show errdisable detect"] = NewKeyword("show errdisable detect", "", "show errdisable detect")
  k["show errdisable recovery"] = NewKeyword("show errdisable recovery", "", "show errdisable recovery")
  k["show fastblk"] = NewKeyword("show fastblk", "", "show fastblk [detailed]")
  k["show file descriptors"] = NewKeyword("show file descriptors", "", "show file descriptors")
  k["show file information"] = NewKeyword("show file information", "", "show file information file-url")
  k["show file systems"] = NewKeyword("show file systems", "", "show file systems")
  k["show flh-log"] = NewKeyword("show flh-log", "", "")
  k["show fm inspect"] = NewKeyword("show fm inspect", "", "show fm inspect [detail | interface type mod/port]")
  k["show fm interface"] = NewKeyword("show fm interface", "", "show fm interface {interface type mod/port | null interface-number | port-channel number | vlan vlan-id}")
  k["show fm reflexive"] = NewKeyword("show fm reflexive", "", "show fm reflexive")
  k["show fm summary"] = NewKeyword("show fm summary", "", "show fm summary")
  k["show funi"] = NewKeyword("show funi", "", "show funi {arp-server [atm atm-interface-number] | class-links {vpi/vci-value | vci-value | connection-name} | ilmi-configuration | ilmi-status [atm atm-interface-number] | map | pvc [vpi/vci-value | vci-value | connection-name | dbs | ppp] | route | traffic | vp atm-vpi-number | vc {atm-vcd-number | connection-name | detail [prefix {interface | vc-name | vcd | vpi/vci}]} | interface atm atm-interface-number {connection-name | detail [prefix {interface | vc-name | vcd | vpi/vci}]} | range lower-vcd-limit upper-vcd-limit {connection-name | detail [prefix {interface | vc-name | vcd | vpi/vci}]} | interface atm atm-interface-number {connection-name | detail [prefix {interface | vc-name | vcd | vpi/vci}]} | summary [atm atm-interface-number]}")
  k["show identity policy"] = NewKeyword("show identity policy", "", "show identity policy [name]")
  k["show identity profile"] = NewKeyword("show identity profile", "", "show identity profile [default | dot1x | eapoudp]")
  k["show install"] = NewKeyword("show install", "", "show install {active | committed | inactive | log | package {bootflash: | flash: | webui:} | rollback | summary | uncommitted}")
  k["show platform software snapshot status"] = NewKeyword("show platform software snapshot status", "", "show platform software snapshot slot status")
  k["show power usage"] = NewKeyword("show power usage", "", "")
  k["show gsr"] = NewKeyword("show gsr", "", "show gsr [chassis-info [details]]")
  k["show gt64010 (7200)"] = NewKeyword("show gt64010 (7200)", "", "show gt64010")
  k["show hardware"] = NewKeyword("show hardware", "", "show hardware")
  k["show health-monitor"] = NewKeyword("show health-monitor", "", "show health-monitor [summary]")
  k["show history"] = NewKeyword("show history", "", "show history")
  k["show history all"] = NewKeyword("show history all", "", "show history all")
  k["show hosts"] = NewKeyword("show hosts", "", "show hosts [vrf vrf-name] [view [view-name | default]] [all] [hostname | summary]")
  k["show html"] = NewKeyword("show html", "", "show html {module [ports [l2]] | port [all | l2 | l3] [shortnames]} {command line | count | names | options}")
  k["show idb"] = NewKeyword("show idb", "", "show idb")
  k["show idprom"] = NewKeyword("show idprom", "", "show idprom {all | frutype} [detail]")
  k["show inventory"] = NewKeyword("show inventory", "", "show inventory [raw] [entity]")
  k["show location"] = NewKeyword("show location", "", "show location { {civic-location | custom-location | geo-location {identifier id | interface name type | static}} | host}")
  k["show logging"] = NewKeyword("show logging", "", "show logging [slot slot-number | summary]")
  k["show logging count"] = NewKeyword("show logging count", "", "show logging count")
  k["show logging history"] = NewKeyword("show logging history", "", "show logging history")
  k["show ip ports all"] = NewKeyword("show ip ports all", "", "show ip ports all")
  k["show logging system"] = NewKeyword("show logging system", "", "show logging system [disk [file-location] | last [num-of-last-log-msgs] ]")
  k["show logging xml"] = NewKeyword("show logging xml", "", "show logging xml")
  k["show memory"] = NewKeyword("show memory", "", "Cisco IOS software show memory [memory-type] [free] [overflow] [summary] [poisoning] Cisco IOS XE or Software Modularity show memory")
  k["show memory allocating-process"] = NewKeyword("show memory allocating-process", "", "show memory allocating-process [totals]")
  k["show memory dead"] = NewKeyword("show memory dead", "", "show memory dead [totals]")
  k["show memory debug incremental"] = NewKeyword("show memory debug incremental", "", "show memory debug incremental {allocations | leaks [lowmem | summary] | status}")
  k["show memory debug leaks"] = NewKeyword("show memory debug leaks", "", "Cisco IOS software show memory debug leaks [chunks | largest | lowmem | summary] Cisco Catalyst 4500e Series Switches running IOS XE software show memory debug leaks all [detailed | totals]")
  k["show memory debug references"] = NewKeyword("show memory debug references", "", "show memory debug references [dangling [start-address start-address]]")
  k["show memory debug unused"] = NewKeyword("show memory debug unused", "", "show memory debug unused")
  k["show memory detailed"] = NewKeyword("show memory detailed", "", "Cisco IOS Software Modularity show memory detailed [process-id | process-name] [start-address [end-address] | bigger | free | physical | shared | statistics | summary] Cisco Catalyst 4500e Series Switches running IOS XE software show memory detailed [process {process-id | process-name} | free | io | overflow | statistics | summary]")
  k["show memory ecc"] = NewKeyword("show memory ecc", "", "show memory ecc")
  k["show memory events"] = NewKeyword("show memory events", "", "show memory events [outstanding [summary]]")
  k["show memory failures alloc"] = NewKeyword("show memory failures alloc", "", "show memory failures alloc")
  k["show memory fast"] = NewKeyword("show memory fast", "", "show memory fast [allocating-process [totals] | dead [totals] | free [totals]]")
  k["show memory fragment"] = NewKeyword("show memory fragment", "", "show memory [processor | io] fragment [detail]")
  k["show memory lite-chunks"] = NewKeyword("show memory lite-chunks", "", "show memory lite-chunks {statistics | totals} {summary {pool | {all | pool}}}")
  k["show memory multibus"] = NewKeyword("show memory multibus", "", "show memory multibus [allocating-process [totals] | dead [totals] | free [totals]]")
  k["show memory pci"] = NewKeyword("show memory pci", "", "show memory pci")
  k["show memory processor"] = NewKeyword("show memory processor", "", "show memory processor [allocating-process [totals] | dead [totals] | fragment [detail] | free [totals] | statistics]")
  k["show memory scan"] = NewKeyword("show memory scan", "", "show memory scan")
  k["show memory statistics history"] = NewKeyword("show memory statistics history", "", "show memory statistics history [table]")
  k["show memory traceback"] = NewKeyword("show memory traceback", "", "show memory traceback [id | exclusive | totals]")
  k["show memory transient"] = NewKeyword("show memory transient", "", "show memory transient [allocating-process [totals] | dead [totals] | fragment [detail] | free [totals] | statistics [history]]")
  k["show microcode"] = NewKeyword("show microcode", "", "show microcode")
  k["show mls statistics"] = NewKeyword("show mls statistics", "", "show mls statistics [module num]")
  k["show module"] = NewKeyword("show module", "", "show module [mod-num | all | provision | version]")
  k["show monitor event-trace"] = NewKeyword("show monitor event-trace", "", "show monitor event-trace [all-traces] component {all | back hour:minute | clock hour:minute | from-boot seconds | latest | parameters}")
  k["show monitor event-trace flexvpn"] = NewKeyword("show monitor event-trace flexvpn", "", "show monitor event-trace flexvpn {all | back hour:minute | clock hour:minute | crypto | from-boot seconds | latest | merged | nhrp | tunnel}")
  k["show monitor permit-list"] = NewKeyword("show monitor permit-list", "", "show monitor permit-list")
  k["show monitor session"] = NewKeyword("show monitor session", "", "show monitor session [range session-range | local | remote | all | session] show monitor session [erspan-destination | erspan-source | egress replication-mode capability | detail]")
  k["show msfc"] = NewKeyword("show msfc", "", "show msfc {buffers | eeprom | fault | netint | tlb}")
  k["show pagp"] = NewKeyword("show pagp", "", "show pagp [group-number] {counters | internal | neighbor | pgroup}")
  k["show parser dump"] = NewKeyword("show parser dump", "", "show parser dump {command-mode | all} [privilege-level level] [extend] [breakage]")
  k["show parser macro"] = NewKeyword("show parser macro", "", "show parser macro [name macro-name | brief | description [interface interface]]")
  k["show parser statistics"] = NewKeyword("show parser statistics", "", "show parser statistics")
  k["show pci"] = NewKeyword("show pci", "", "show pci {hardware | bridge [register] }")
  k["show pci hardware"] = NewKeyword("show pci hardware", "", "show pci hardware")
  k["show perf-meas"] = NewKeyword("show perf-meas", "", "show perf-meas [report-types | all]")
  k["show platform"] = NewKeyword("show platform", "", "show platform {buffers | copp rate-limit {arp | dhcp | atm-oam | ethernet-oam | icmp | igmp | pppoe-discovery | atom ether-vc | all} | np copp [ifnum] [detail] | dma | eeprom | fault | hardware capacity | hardware pfc mode | internal-vlan | interrupts | netint | software ipv6-multicast connected | stats | tech-support {ipmulticast [vrf vrf-name] group-ip-addr src-ip-addr | unicast [vrf vrf-name] destination-ip-addr destination-mask [global]} | tlb | vfi dot1q-transparency | vlans} Cisco 4400 Series Integrated Services Routers show platform Cisco ASR 1000 Series Aggregation Services Routers show platform")
  k["show platform bridge"] = NewKeyword("show platform bridge", "", "show platform bridge [interface-type interface-number] [vlan vlan-id] [summary]")
  k["show platform cfm"] = NewKeyword("show platform cfm", "", "show platform cfm {epl | info | interface {fastethernet | gigabitethernet | port-channel} number {fwd_vlan vlan-number | level | vlan_list}}")
  k["show platform diag"] = NewKeyword("show platform diag", "", "show platform diag")
  k["show platform hardware capacity"] = NewKeyword("show platform hardware capacity", "", "show platform hardware capacity [resource-type]")
  k["show platform isg"] = NewKeyword("show platform isg", "", "show platform isg {memory {detailed} | msi-all | slot | session-count | {slot-number | all} | uid | {subscriber-session UID | all} | vrf | {vrf-number | all}}")
  k["show platform oam"] = NewKeyword("show platform oam", "", "show platform oam {link-monitor [interface type number] | loopback}")
  k["show platform redundancy"] = NewKeyword("show platform redundancy", "", "show platform redundancy {atm | ccb slot-number cpu-number | cwpa-ce3 | cwpa-ct3 | cwpa-e1 | cwpa-stm1 | cwpa-t1 | frame-relay | hdlc | if-config {slot-number cpu-number [bay-number] | default-retvals} | mlp | multilink-vc | osm-chocx | osm-ct3 | ppp | shadowstate | spa-chocx | spa-ct3 | switchover}")
  k["show platform software filesystem"] = NewKeyword("show platform software filesystem", "", "show platform software filesystem {bootflash: | stby-bootflash: | fpd: | harddisk: | stby-harddisk: | obfl: | stby-obfl: | usb0: | stby-usb0: | usb1: | stby-usb1:} [all] [details]")
  k["show platform software memory"] = NewKeyword("show platform software memory", "", "show platform software memory [database | messaging] {chassis-manager slot | cpp-control-process process | cpp-driver process | cpp-ha-server process | cpp-service-process process | forwarding-manager slot | host-manager slot | interface-manager slot | ios slot | logger slot | pluggable-services slot | shell-manager slot} [brief]")
  k["show platform software mount"] = NewKeyword("show platform software mount", "", "show platform software mount [slot [brief]]")
  k["show platform software process list"] = NewKeyword("show platform software process list", "", "show platform software process list slot [name process-name | process-id process-id | sort memory | summary]")
  k["show platform process slot"] = NewKeyword("show platform process slot", "", "show platform software process slot slot monitor [cycles cycles] [interval delay] [lines lines-of-output]")
  k["show platform software snapshot status"] = NewKeyword("show platform software snapshot status", "", "show platform software snapshot slot status")
  k["show platform software tech-support"] = NewKeyword("show platform software tech-support", "", "show platform software tech-support [file {bootflash:filename.tgz | fpd:filename.tgz | harddisk:filename.tgz | obfl:filename.tgz | stby-bootflash:filename.tgz | stby-harddisk:filename.tgz | stby-obfl:filename.tgz | stby-usb0:filename.tgz | stby-usb1:filename.tgz}]")
  k["show platform subscriber-group"] = NewKeyword("show platform subscriber-group", "", "show platform subscriber-group {vrf-number | all} [detail]")
  k["show platform supervisor"] = NewKeyword("show platform supervisor", "", "show platform supervisor mtu slot slot-number port port-number")
  k["show power"] = NewKeyword("show power", "", "show power [available | inline [interface number | module number] | redundancy-mode | status {all | fan-tray fan-tray-number | module slot | power-supply pwr-supply-number} | total | used]")
  k["show processes"] = NewKeyword("show processes", "", "Cisco IOS Software show processes [heapcheck | history | process-id | timercheck] Cisco IOS Software Modularity Images and Cisco Catalyst 4500e Series Switches Running Cisco IOS XE Software show processes")
  k["show processes cpu"] = NewKeyword("show processes cpu", "", "Cisco IOS Software show processes cpu [history [table] | sorted [1min | 5min | 5sec]] Cisco IOS Software Modularity show processes cpu [detailed [process-id | process-name] | history] Cisco Catalyst 4500e Series Switches running IOS XE software show processes cpu [detailed process [process-id | process-name] | history [detailed | summary | table] | sorted]")
  k["show processes detailed"] = NewKeyword("show processes detailed", "", "Cisco IOS software show processes detailed [process-id | process-name] Cisco Catalyst 4500e Series Switches running IOS XE software show processes detailed [process-id]")
  k["show processes interrupt mask buffer"] = NewKeyword("show processes interrupt mask buffer", "", "show processes interrupt mask buffer")
  k["show processes interrupt mask detail"] = NewKeyword("show processes interrupt mask detail", "", "show processes interrupt mask detail [pid]")
  k["show processes memory"] = NewKeyword("show processes memory", "", "Cisco IOS Software show processes memory [process-id | sorted [allocated | getbufs | holding]] Cisco IOS Software Modularity show processes memory [ [detailed [ [process-name [: instance-id]] | process-id taskid task-id]]] [alloc-summary | sorted {start | size | caller}] Cisco Catalyst 4500e Series Switches Running IOS XE software show processes memory [detailed [process iosd | task task-id] | sorted [allocated | getbufs | holding]]")
  k["show protocols"] = NewKeyword("show protocols", "", "show protocols [interface-name interface-number]")
  k["show region"] = NewKeyword("show region", "", "show region [address hex-address]")
  k["show registry"] = NewKeyword("show registry", "", "Cisco IOS Software show registry [registry-name [registry-number] ] [brief | statistics] Cisco IOS Software Modularity show registry [name [registry-name [registry-number] ]] [brief [name [registry-name [registry-number] ]] | preemptions | rpcp status | statistics [brief] [name [registry-name [registry-number] ]] [remote]] [process {process-name | process-id}]")
  k["show reload"] = NewKeyword("show reload", "", "show reload")
  k["show reload history"] = NewKeyword("show reload history", "", "show reload history")
  k["show resource-pool queue"] = NewKeyword("show resource-pool queue", "", "show resource-pool queue {description | statistics}")
  k["show rhosts"] = NewKeyword("show rhosts", "", "show rhosts")
  k["show rom-monitor"] = NewKeyword("show rom-monitor", "", "Supported Platforms Other than the Cisco ASR1000 Series Routers show rom-monitor Cisco ASR 1000 Series Routers show rom-monitor slot")
  k["show rom-monitor slot"] = NewKeyword("show rom-monitor slot", "", "show rom-monitor slot num {sp | rp}")
  k["show running identity policy"] = NewKeyword("show running identity policy", "", "show running identity policy [name]")
  k["show running identity profile"] = NewKeyword("show running identity profile", "", "show running identity profile [default | dot1x | eapoudp]")
  k["show running-config"] = NewKeyword("show running-config", "", "show running-config [options]")
  k["show running-config control-plane"] = NewKeyword("show running-config control-plane", "", "show running-config control-plane [cef-exception | host | transit]")
  k["show running-config map-class"] = NewKeyword("show running-config map-class", "", "show running-config map-class [atm [map-class-name] | dialer [map-class-name] | frame-relay [map-class-name] ] [linenum]")
  k["show running-config partition"] = NewKeyword("show running-config partition", "", "show running-config partition part")
  k["show scp"] = NewKeyword("show scp", "", "show scp {accounting | counters | linecards [details] | mcast {group group-id | inst} | process id | status}")
  k["show slot"] = NewKeyword("show slot", "", "show slot [all | chips | detailed | err | summary]")
  k["show slot0:"] = NewKeyword("show slot0:", "", "show slot0: [all | chips | detailed | err | summary]")
  k["show slot1:"] = NewKeyword("show slot1:", "", "show slot1: [all | chips | detailed | err | summary]")
  k["show software authenticity file"] = NewKeyword("show software authenticity file", "", "show software authenticity file {flash0:filename | flash1:filename | flash:filename | nvram:filename | usbflash0:filename | usbflash1:filename}")
  k["show software authenticity keys"] = NewKeyword("show software authenticity keys", "", "show software authenticity keys")
  k["show software authenticity running"] = NewKeyword("show software authenticity running", "", "show software authenticity running")
  k["show software package"] = NewKeyword("show software package", "", "show software package bundle or package url [detail] [verbose]")
  k["show software installer rollback-timer"] = NewKeyword("show software installer rollback-timer", "", "show software installer rollback-timer")
  k["show stacks"] = NewKeyword("show stacks", "", "show stacks PID")
  k["show startup-config"] = NewKeyword("show startup-config", "", "")
  k["show subsys"] = NewKeyword("show subsys", "", "show subsys [class class | name name]")
  k["show sup-bootflash"] = NewKeyword("show sup-bootflash", "", "show sup-bootflash [all | chips | filesys]")
  k["show system jumbomtu"] = NewKeyword("show system jumbomtu", "", "show system jumbomtu")
  k["show tech-support"] = NewKeyword("show tech-support", "", "show tech-support [page] [password] [cef | ipc | ipmulticast [vrf vrf-name] | isis | mpls | ipsec [peer ipv4 address | vrf vrf-name] | ospf [process-id | detail] | rsvp | voice | wccp] Cisco 7600 Series show tech-support [cef | ipmulticast [vrf vrf-name] | isis | password [page] | platform | page | rsvp] Cisco ASR 900 Series, Cisco ASR 920 Series, Cisco NCS 4200 Series show tech-support platform cef ipv4 address [ vrf vrf-name ] | bfd { gal GAL-BFD-tunnel-number | ipv4 ip-address { GigabitEthernet TenGigabitEthernet } | multihop ip-address | poch-ipv4 ip-address { GigabitEthernet TenGigabitEthernet } } | multicast ipv4 ip-address | qos")
  k["show template"] = NewKeyword("show template", "", "show template [template-name]")
  k["show usb controllers"] = NewKeyword("show usb controllers", "", "show usb controllers [controller-number]")
  k["show usb device"] = NewKeyword("show usb device", "", "show usb device [controller-ID [device-address] ]")
  k["show usb driver"] = NewKeyword("show usb driver", "", "show usb driver [index]")
  k["show usb port"] = NewKeyword("show usb port", "", "show usb port [port-number]")
  k["show usb tree"] = NewKeyword("show usb tree", "", "show usb tree")
  k["show usbtoken"] = NewKeyword("show usbtoken", "", "show usbtoken [0-9]: {all | filesystem}")
  k["show version"] = NewKeyword("show version", "", "show version Cisco Catalyst 3850 Series Switches and Cisco 5760 Series Wireless Controllers show version [switchnode] [running | committed | provisioned] Cisco ASR 1000 Series Routers show version [rp-slot] [installed [user-interface] | provisioned | running] Cisco Catalyst 4500e Series Switches running IOS XE software show version [rp-slot] [running] Cisco Catalyst 6500 Series Routers show version [epld slot]")
  k["show warm-reboot"] = NewKeyword("show warm-reboot", "", "show warm-reboot")
  k["show wiretap"] = NewKeyword("show wiretap", "", "show wiretap [id [stream-id] | idbs]")
  k["show whoami"] = NewKeyword("show whoami", "", "show whoami [text]")
  k["showmon"] = NewKeyword("showmon", "", "showmon")
  k["slave auto-sync config"] = NewKeyword("slave auto-sync config", "", "slave auto-sync config no slave auto-sync config")
  k["slave default-slot"] = NewKeyword("slave default-slot", "", "slave default-slot processor-slot-number")
  k["slave image"] = NewKeyword("slave image", "", "slave image {system | file-url}")
  k["slave reload"] = NewKeyword("slave reload", "", "slave reload")
  k["slave sync config"] = NewKeyword("slave sync config", "", "slave sync config")
  k["slave terminal"] = NewKeyword("slave terminal", "", "slave terminal no slave terminal")
  k["software clean"] = NewKeyword("software clean", "", "software clean [file file url] [force] [switch nodes] [verbose]")
  k["software commit"] = NewKeyword("software commit", "", "software commit [switchnode] [verbose]")
  k["software expand"] = NewKeyword("software expand", "", "software expand {file source url | running} [todestination url] [switchnodes] [verbose]")
  k["software install file"] = NewKeyword("software install file", "", "software install file bundle url [switchnodes] [auto-rollbackminutes] [force] [on-reboot] [provisioning-fileprovisioning-file url] [force] [new] [verbose]")
  k["software install source switch"] = NewKeyword("software install source switch", "", "software install source switchnode [switchnode] [auto-rollbackminutes] [force] [on-reboot] [verbose] [new] [provisioning-fileprovisioning-file url]")
  k["software install source switch"] = NewKeyword("software install source switch", "", "software install source switch node [switch nodes] [auto-rollback minutes] [on-reboot] [provisioning-file provisioning-file url] [force] [verbose] [new]")
  k["software provision"] = NewKeyword("software provision", "", "software provision source {url bundle or package url | listlist-name} [packagepackage name or wildcard] [switchnode] [force] [verbose]")
  k["software repackage"] = NewKeyword("software repackage", "", "software repackage switchnode dest url and filename")
  k["software rollback"] = NewKeyword("software rollback", "", "software rollback [switchnode] [as-booted] [provisioning-fileprovisioning-file url] [on-reboot] [force] [verbose]")
  k["software source list"] = NewKeyword("software source list", "", "software source list list-name-string To erase a source list, use the no form of the software source list command. no software source list list-name-string")
  k["software uninstall"] = NewKeyword("software uninstall", "", "software unistall bundle or package url [switchnode]")
  k["special-character-bits"] = NewKeyword("special-character-bits", "", "special-character-bits {7 | 8} no special-character-bits")
  k["squeeze"] = NewKeyword("squeeze", "", "squeeze [/nolog] [/quiet] filesystem: Cisco 7600 Series Router squeeze filesystem:")
  k["stack-mib portname"] = NewKeyword("stack-mib portname", "", "stack-mib portname portname")
  k["state-machine"] = NewKeyword("state-machine", "", "state-machine name state first-character last-character [next-state delay | transmit] no state-machine name")
  k["stopbits"] = NewKeyword("stopbits", "", "stopbits {1 | 1. 5 | 2} no stopbits")
  k["storm-control level"] = NewKeyword("storm-control level", "", "storm-control {broadcast | multicast | unicast} level level [. level] no storm-control {broadcast | multicast | unicast} level")
  k["sync-restart-delay"] = NewKeyword("sync-restart-delay", "", "sync-restart-delay timer no sync-restart-delay timer")
  k["systat"] = NewKeyword("systat", "", "systat all")
  k["system flowcontrol bus"] = NewKeyword("system flowcontrol bus", "", "[default] system flowcontrol bus {auto | on} no system flowcontrol bus")
  k["system jumbomtu"] = NewKeyword("system jumbomtu", "", "system jumbomtu mtu-size no system jumbomtu")
  k["tdm clock priority"] = NewKeyword("tdm clock priority", "", "tdm clock priority priority-number {slot/ds1-port | slot/ds3-port:ds1-port | external | freerun} no tdm clock priority priority-number {slot/ds1-port | slot/ds3-port:ds1-port | external | freerun}")
  k["terminal databits"] = NewKeyword("terminal databits", "", "terminal databits {5 | 6 | 7 | 8}")
  k["terminal data-character-bits"] = NewKeyword("terminal data-character-bits", "", "terminal data-character-bits {7 | 8}")
  k["terminal dispatch-character"] = NewKeyword("terminal dispatch-character", "", "terminal dispatch-character ascii-number [ascii-number2...]")
  k["terminal dispatch-timeout"] = NewKeyword("terminal dispatch-timeout", "", "terminal dispatch-timeout milliseconds")
  k["terminal download"] = NewKeyword("terminal download", "", "terminal download")
  k["terminal editing"] = NewKeyword("terminal editing", "", "terminal editing terminal no editing")
  k["terminal escape-character"] = NewKeyword("terminal escape-character", "", "terminal escape-character ascii-number")
  k["terminal exec-character-bits"] = NewKeyword("terminal exec-character-bits", "", "terminal exec-character-bits {7 | 8}")
  k["terminal flowcontrol"] = NewKeyword("terminal flowcontrol", "", "terminal flowcontrol {none | software [in | out] | hardware}")
  k["terminal full-help"] = NewKeyword("terminal full-help", "", "terminal full-help")
  k["terminal history"] = NewKeyword("terminal history", "", "terminal history terminal no history")
  k["terminal history size"] = NewKeyword("terminal history size", "", "terminal history size number-of-lines terminal no history size")
  k["terminal hold-character"] = NewKeyword("terminal hold-character", "", "terminal hold-character ascii-number terminal no hold-character")
  k["terminal international"] = NewKeyword("terminal international", "", "terminal international no terminal international")
  k["terminal keymap-type"] = NewKeyword("terminal keymap-type", "", "terminal keymap-type keymap-name")
  k["terminal length"] = NewKeyword("terminal length", "", "terminal length screen-length")
  k["terminal monitor"] = NewKeyword("terminal monitor", "", "terminal monitor")
  k["terminal notify"] = NewKeyword("terminal notify", "", "terminal notify terminal no notify")
  k["terminal padding"] = NewKeyword("terminal padding", "", "terminal padding ascii-number count")
  k["terminal parity"] = NewKeyword("terminal parity", "", "terminal parity {none | even | odd | space | mark}")
  k["terminal rxspeed"] = NewKeyword("terminal rxspeed", "", "terminal rxspeed bps")
  k["terminal special-character-bits"] = NewKeyword("terminal special-character-bits", "", "terminal special-character-bits 7 | 8")
  k["terminal speed"] = NewKeyword("terminal speed", "", "terminal speed bps")
  k["terminal start-character"] = NewKeyword("terminal start-character", "", "terminal start-character ascii-number")
  k["terminal stopbits"] = NewKeyword("terminal stopbits", "", "terminal stopbits {1 | 1.5 | 2}")
  k["terminal stop-character"] = NewKeyword("terminal stop-character", "", "terminal stop-character ascii-number")
  k["terminal telnet break-on-ip"] = NewKeyword("terminal telnet break-on-ip", "", "terminal telnet break-on-ip")
  k["terminal telnet refuse-negotiations"] = NewKeyword("terminal telnet refuse-negotiations", "", "terminal telnet refuse-negotiations")
  k["terminal telnet speed"] = NewKeyword("terminal telnet speed", "", "terminal telnet speed default-speed maximum-speed")
  k["terminal telnet sync-on-break"] = NewKeyword("terminal telnet sync-on-break", "", "terminal telnet sync-on-break")
  k["terminal telnet transparent"] = NewKeyword("terminal telnet transparent", "", "terminal telnet transparent")
  k["terminal terminal-type"] = NewKeyword("terminal terminal-type", "", "terminal terminal-type terminal-type")
  k["terminal txspeed"] = NewKeyword("terminal txspeed", "", "terminal txspeed bps")
  k["terminal width"] = NewKeyword("terminal width", "", "terminal width characters")
  k["terminal-queue entry-retry-interval"] = NewKeyword("terminal-queue entry-retry-interval", "", "terminal-queue entry-retry-interval seconds no terminal-queue entry-retry-interval")
  k["terminal-type"] = NewKeyword("terminal-type", "", "terminal-type {terminal-name | terminal-type} no terminal-type")
  k["test cable-diagnostics"] = NewKeyword("test cable-diagnostics", "", "test cable-diagnostics tdr interface type number")
  k["test flash"] = NewKeyword("test flash", "", "test flash")
  k["test interfaces"] = NewKeyword("test interfaces", "", "test interfaces")
  k["test memory"] = NewKeyword("test memory", "", "test memory")
  k["test memory destroy"] = NewKeyword("test memory destroy", "", "test memory destroy [chunk | mgd-chunk | force-chunk | dangling-reference] chunk-id")
  k["test platform police get"] = NewKeyword("test platform police get", "", "test platform police get")
  k["test platform police set"] = NewKeyword("test platform police set", "", "test platform police set rate")
  k["tftp-server"] = NewKeyword("tftp-server", "", "tftp-server flash [partition-number :] filename1 [alias filename2] [access-list-number] tftp-server rom alias filename1 [access-list-number] no tftp-server {flash [partition-number :] filename1 | rom alias filename2} Cisco 1600 Series and Cisco 3600 Series Routers tftp-server flash [device :] [partition-number :] filename no tftp-server flash [device :] [partition-number :] filename Cisco 7000 Family Routers tftp-server flash device : filename no tftp-server flash device : filename")
  k["tftp-server system"] = NewKeyword("tftp-server system", "", "")
  k["time-period"] = NewKeyword("time-period", "", "time-period minutes no time-period minutes")
  k["trace (privileged)"] = NewKeyword("trace (privileged)", "", "trace [protocol] [destination]")
  k["trace (user)"] = NewKeyword("trace (user)", "", "trace [protocol] [destination]")
  k["traceroute"] = NewKeyword("traceroute", "", "traceroute [vrf vrf-name | topology topology-name] [protocol] destination")
  k["traceroute mac"] = NewKeyword("traceroute mac", "", "traceroute mac source-mac-address {destination-mac-address | interface type interface-number destination-mac-address} [vlan vlan-id] [detail] traceroute mac interface type interface-number source-mac-address {destination-mac-address | interface type interface-number destination-mac-address} [vlan vlan-id] [detail] traceroute mac ip {source-ip-address | source-hostname} {destination-ip-address | destination-hostname} [detail]")
  k["undelete"] = NewKeyword("undelete", "", "undelete index [filesystem :]")
  k["unprofile"] = NewKeyword("unprofile", "", "unprofile {process {process-ID | process-name}} {start-address end-address increment | all | task}")
  k["upgrade automatic abortversion"] = NewKeyword("upgrade automatic abortversion", "", "upgrade automatic abortversion no upgrade automatic abortversion")
  k["upgrade automatic getversion"] = NewKeyword("upgrade automatic getversion", "", "upgrade automatic getversion {cisco username username password password image image | url} { [at hh:mm] | now | [in hh:mm]} [disk-management {auto | confirm | no}]")
  k["upgrade automatic runversion"] = NewKeyword("upgrade automatic runversion", "", "upgrade automatic runversion {at hh:mm | now | in hh:mm}")
  k["upgrade filesystem monlib"] = NewKeyword("upgrade filesystem monlib", "", "upgrade filesystem monlib {disk0 | disk1}")
  k["upgrade rom-monitor"] = NewKeyword("upgrade rom-monitor", "", "upgrade rom-monitor slot num {sp | rp} file filename upgrade rom-monitor slot num {sp | rp} {invalidate | preference} {region1 | region2} Cisco ASR 1000 Series Aggregation Services Routers upgrade rom-monitor filename URL slot")
  k["upgrade filesystem monlib"] = NewKeyword("upgrade filesystem monlib", "", "upgrade filesystem monlib {disk0 | disk1}")
  k["upgrade rom-monitor preference"] = NewKeyword("upgrade rom-monitor preference", "", "upgrade rom-monitor preference [readonly | upgrade]")
  k["vacant-message"] = NewKeyword("vacant-message", "", "vacant-message [d message d] no vacant-message")
  k["verify"] = NewKeyword("verify", "", "verify [/md5 [md5-value] ] filesystem: [file-url] Cisco 7600 Series Router verify {/md5 flash-filesystem [expected-md5-signature] | /ios flash-filesystem | flash-filesystem}")
  k["vtp"] = NewKeyword("vtp", "", "vtp {domain domain-name | file filename | interface interface-name [only] | mode {client | off | server | transparent} {vlan | mst | unknown} | password password-value [hidden | secret] | pruning | version {1 | 2 | 3}} no vtp")
  k["warm-reboot"] = NewKeyword("warm-reboot", "", "warm-reboot [count number] [uptime minutes] no warm-reboot count number uptime minutes")
  k["where"] = NewKeyword("where", "", "where")
  k["width"] = NewKeyword("width", "", "width characters no width")
  k["write core"] = NewKeyword("write core", "", "write core [hostname [LINE] | destination-address [LINE]]")
  k["write erase"] = NewKeyword("write erase", "", "")
  k["write memory"] = NewKeyword("write memory", "", "write memory")
  k["write mib-data"] = NewKeyword("write mib-data", "", "write mib-data")
  k["write network"] = NewKeyword("write network", "", "write network [host-file-address]")
  k["write terminal"] = NewKeyword("write terminal", "", "")
  k["xmodem"] = NewKeyword("xmodem", "", "xmodem [-c] [-y] [-e] [-f] [-r] [-x] [ [-s] data-rate] [filename]")
  
  return k
}

func Completions() []protocol.CompletionItem {
  var c []protocol.CompletionItem
  for _, k := range Keywords() {
    c = append(c, k.Completion())
  }
  return c
}

